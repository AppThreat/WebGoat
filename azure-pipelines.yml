trigger:
- master
- develop

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: false
    goals: 'compile'
# Pull the sast-scan image from the container registry. Feel free to cache it locally within acr, ecr or gcr to
# improve performance and security
- script: docker pull quay.io/appthreat/sast-scan
  displayName: "Download sast-scan"
- script: |
    docker run -e "WORKSPACE=https://github.com/AppThreat/WebGoat/blob/$(Build.SourceVersion)" \
      -v $(Build.SourcesDirectory):/app \
      -v $(Build.ArtifactStagingDirectory):/reports \
      quay.io/appthreat/sast-scan scan --src /app \
      --type credscan,java,bash,nodejs \
      --out_dir /reports/CodeAnalysisLogs
  displayName: "Java and Credscan"
  continueOnError: "true"

# To integrate with the SARIF Azure DevOps Extension it is necessary to publish the CodeAnalysisLogs folder
# as an artifact with the same name
- task: PublishBuildArtifacts@1
  displayName: "Publish analysis logs"
  inputs:
    PathtoPublish: "$(Build.ArtifactStagingDirectory)/CodeAnalysisLogs"
    ArtifactName: "CodeAnalysisLogs"
    publishLocation: "Container"
